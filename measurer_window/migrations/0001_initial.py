# Generated by Django 4.1.2 on 2023-03-06 02:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LowTides',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('price_in_currency', models.FloatField(blank=True, null=True, verbose_name=' Цена EUR/USD')),
                ('price_in_byn', models.FloatField(blank=True, null=True, verbose_name='Цена BYN')),
                ('unit', models.PositiveSmallIntegerField(choices=[{1, 'м2'}, {'шт', 2}], verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Отлив',
                'verbose_name_plural': 'Отливы',
            },
        ),
        migrations.CreateModel(
            name='LowTidesCalc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='Номер замера')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('length', models.IntegerField(default=0, verbose_name='Длинна')),
                ('count', models.IntegerField(default=0, verbose_name='Количество')),
                ('square_meter', models.FloatField(default=0.0, max_length=255, verbose_name='В метрах квадратных')),
                ('linear_meter', models.FloatField(default=0.0, max_length=255, verbose_name='В метрах погонных')),
                ('price_in_byn', models.FloatField(default=0.0, max_length=255, verbose_name='Цена BYN')),
                ('price_in_currency', models.FloatField(default=0.0, max_length=255, verbose_name='Цена EUR/USD')),
            ],
            options={
                'verbose_name': 'Просчет отлива',
                'verbose_name_plural': 'Просчеты отливов',
            },
        ),
        migrations.CreateModel(
            name='LowTidesComplectCalc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='Номер замера')),
                ('count', models.IntegerField(default=0, verbose_name='Количество')),
                ('price_in_byn', models.FloatField(default=0.0, max_length=255, verbose_name='Цена BYN')),
                ('price_in_currency', models.FloatField(default=0.0, max_length=255, verbose_name='Цена EUR/USD')),
            ],
            options={
                'verbose_name': 'Просчет комплектующих отливов',
                'verbose_name_plural': 'Просчеты комплектующих отливов',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя заказчика')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер телефона')),
                ('date', models.DateField(verbose_name='Дата замера')),
                ('sum_in_byn', models.FloatField(default=0.0, verbose_name='Сумма просчета BYN')),
                ('sum_in_currency', models.FloatField(default=0.0, verbose_name='Сумма просчета в EUR/USD')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[{0, 'Активная заявка'}, {1, 'Договор заключен'}, {2, 'Думает'}, {3, 'Придет на офис'}, {4, 'Банковская рассрочка'}, {'Отказ до замера', 5}, {'Отказ после замера', 6}], default=0, null=True, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Замер',
                'verbose_name_plural': 'Замеры',
            },
        ),
        migrations.CreateModel(
            name='Windowsill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('price_in_currency', models.FloatField(blank=True, null=True, verbose_name=' Цена EUR/USD')),
                ('price_in_byn', models.FloatField(blank=True, null=True, verbose_name='Цена BYN')),
                ('unit', models.PositiveSmallIntegerField(choices=[{1, 'м2'}, {'шт', 2}], verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Подоконник',
                'verbose_name_plural': 'Подоконники',
            },
        ),
        migrations.CreateModel(
            name='WindowsillComplectCalc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='Номер замера')),
                ('count', models.IntegerField(default=0, verbose_name='Количество')),
                ('price_in_byn', models.FloatField(default=0.0, max_length=255, verbose_name='Цена BYN')),
                ('price_in_currency', models.FloatField(default=0.0, max_length=255, verbose_name='Цена EUR/USD')),
                ('windowsill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='measurer_window.windowsill', verbose_name='Комплектующие подоконника')),
            ],
            options={
                'verbose_name': 'Просчет комплектующих подоконников',
                'verbose_name_plural': 'Просчеты комплектующих подоконника',
            },
        ),
        migrations.CreateModel(
            name='WindowsillCalc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='Номер замера')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('length', models.IntegerField(default=0, verbose_name='Длинна')),
                ('count', models.IntegerField(default=0, verbose_name='Количество')),
                ('square_meter', models.FloatField(default=0.0, max_length=255, verbose_name='В метрах квадратных')),
                ('linear_meter', models.FloatField(default=0.0, max_length=255, verbose_name='В метрах погонных')),
                ('price_in_byn', models.FloatField(default=0.0, max_length=255, verbose_name='Цена BYN')),
                ('price_in_currency', models.FloatField(default=0.0, max_length=255, verbose_name='Цена EUR/USD')),
                ('windowsill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='measurer_window.windowsill', verbose_name='Подоконник')),
            ],
            options={
                'verbose_name': 'Просчет подоконника',
                'verbose_name_plural': 'Просчеты подоконников',
            },
        ),
    ]
